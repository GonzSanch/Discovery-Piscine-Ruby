<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Las tres en raya</title>
	<style>
		* {
			margin: 0;
			padding: 0;
			box-sizing: border-box;
			font-family: Arial, Helvetica, sans-serif;
		}

		button {
			outline: none;
			border: 4px solid green;
			padding: 10px 20px;
			font-size: 1rem;
			font-weight: bold;
			background: none;
			transition: all 0.2s ease-in-out;
		}

		button:hover {
			cursor: pointer;
			background: green;
			color: white;
		}

		.container {
			min-height: 100vh;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			background: #eee;
		}

		.play-area {
			display: grid;
			width: 300px;
			height: 300px;
			grid-template-columns: auto auto auto;
		}

		.block {
			display: flex;
			width: 100px;
			height: 100px;
			align-items: center;
			justify-content: center;
			font-size: 3rem;
			font-weight: bold;
			border: 3px solid black;
			transition: background 0.02s ease-in-out;
		}

		.block:hover {
			cursor: pointer;
			background: #0ff30f;
		}

		.occupied:hover {
			background: #ff3a3a;
		}

		#block_0, #block_1, #block_2 {
			border-top: none;
		}

		#block_0, #block_3, #block_6 {
			border-left: none;
		}

		#block_6, #block_7, #block_8 {
			border-bottom: none;
		}

		#block_2, #block_5, #block_8 {
			border-right: none;
		}

		.playerWin {
			color: green;
		}

		.computerWin {
			color: red;
		}

		.draw {
			color: orangered;
		}

	</style>
</head>
<body>
	<div class="container">
		<h1>3enRaya</h1>
		<br>
		<div class="play-area">
		</div>
		<br>
		<h2 id="winner" class="winner"></h2>
		<button onclick="reset_board()">Reiniciar</button>
		<button onclick="remove_play()">Anular jugada</button>
	</div>
</body>
<script>
	let play_board = ["", "", "", "", "", "", "", "", ""];
	let board_full = false;
	let player1_lmove = new Array();
	let player2_lmove = new Array();

	const board_container = document.querySelector(".play-area");
	const winner = document.getElementById("winner");
	const player = "O";
	const computer = "X";

	const render_board = () => {
		board_container.innerHTML = "";
		play_board.forEach((element, i) => {
			board_container.innerHTML += `<div id="block_${i}" class="block" onclick="addPlayerMove(${i})">${play_board[i]}</div>`;
			if (element == player || element == computer) {
				document.querySelector(`#block_${i}`).classList.add("occupied");
			}
		});
	}

	const addComputerMove = () => {
		if (!board_full) {
		do {
			selected = Math.floor(Math.random() * 9);
		} while (play_board[selected] != "");
			player2_lmove.push(selected);
			play_board[selected] = computer;
			game_loop();
		}
	};

	const addPlayerMove = element => {
		if (!board_full && play_board[element] == "") {
			player1_lmove.push(element);
			play_board[element] = player;
			game_loop();
			addComputerMove();
		}
	};

	const check_board_complete = () => {
		let flag = true;
		play_board.forEach(element => {
			if (element != player && element != computer) {
				flag = false;
			}
		});
		board_full = flag;
	};

	const check_line = (a, b, c) => {
		return (
			play_board[a] == play_board[b] &&
			play_board[b] == play_board[c] &&
			(play_board[a] == player || play_board[a] == computer)
		);
	};

	const check_match = () => {
		for (i = 0; i < 9; i += 3) {
			if (check_line(i, i + 1, i + 2)) {
				return play_board[i];
			}
		}
		for (i = 0; i < 3; i++) {
			if (check_line(i, i + 3, i + 6)) {
				return play_board[i];
			}
		}
		if (check_line(0, 4, 8)) {
			return play_board[0];
		}
		if (check_line(2, 4, 6)) {
			return play_board[2];
		}
		return "";
	};

	const check_for_winner = () => {
		let res = check_match();
		if (res == player) {
			winner.innerText = "Winner is player!!";
			winner.classList.add("playerWin");
			board_full = true;
		} else if (res == computer) {
			winner.innerText = "Winner is computer!!";
			winner.classList.add("computerWin");
			board_full = true;
		}
		else if (board_full) {
			winner.innerText = "Draw!";
			winner.classList.add("draw");
		}
	};

	const game_loop = () => {
		render_board();
		check_board_complete();
		check_for_winner();
	};

	const reset_board = () => {
		play_board = ["", "", "", "", "", "", "", "", ""];
		board_full = false;
		winner.classList.remove("playerWin");
		winner.classList.remove("computerWin");
		winner.classList.remove("draw");
		winner.innerText = "";
		render_board();
	};

	const remove_play = () => {
		if (player1_lmove.length || player2_lmove.length) {
			console.log("console in");
			if (player1_lmove.length) play_board[player1_lmove.pop()] = "";
			if (player2_lmove.length) play_board[player2_lmove.pop()] = "";
			board_full = false;
			winner.classList.remove("playerWin");
			winner.classList.remove("computerWin");
			winner.classList.remove("draw");
			winner.innerText = "";
			game_loop();
		}
	};

	render_board();

</script>
</html>

<!-- TODO: hacer el juego 5x5 -->
<!-- TODO: IA avanzada -->
<!-- TODO: Añadir menu (opciones) -->
<!-- TODO: guardar o cargar partida -->
